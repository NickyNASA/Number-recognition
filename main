import numpy as np
import random, os

data = tensorflow.keras.datasets.mnist
loaded = data.load_data()

images = loaded[0][0]
expected = loaded[0][1]

a = 1
bias = 1

weights = []

for i in range (0, 28 * 28):
    weights.append(random.random())



def Perceptron(inputs, output):
    outputP = 0
    
    for i in range (0, len(inputs)):
        outputP += inputs[i] * weights[i]
    
    error = output - outputP
    
    for i in range(0, len(weights)):
        print(weights[i])
        weights[i] = weights[i] + (error * inputs[i] * a)


for i in range(0, 10):#len(images)):
    x = images[i]
    img = np.ravel(x) # np.reshape(x, (1, np.product(x.shape)))
    Perceptron(img, expected[i])
    print(weights[0])
