import numpy as np
import random, os

data = tensorflow.keras.datasets.mnist
loaded = data.load_data()

images = loaded[0][0]
expected = loaded[0][1]

a = 1
bias = 1

weights = []
l = 28*28 + 1

for i in range (0, 28 * 28 + 1):
    weights.append(random.random())


def Perceptron(inputs, output):
    outputP = bias * weights[l - 1]
    
    for i in range(0, len(inputs)):
        print(weights[i])
        outputP += inputs[i] * weights[i]
    
    #print(outputP)
    
    error = output - outputP
    
    for i in range(0, len(weights) - 1):
        weights[i] = weights[i] + (error * inputs[i] * a)


for i in range(0, 2):#len(images)):
    x = images[i]
    img = np.ravel(x)
    Perceptron(img, expected[i])
    print(str(i) + " = " + str(weights[0]))
    


print("Finished")
